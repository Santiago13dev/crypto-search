{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/kevin/Desktop/SantiagoDev/proyectospersonales/crypto-search/crypto-backend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject, from } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./supabase.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(supabase, router) {\n    this.supabase = supabase;\n    this.router = router;\n    this.isAuthenticatedSubject = new BehaviorSubject(false);\n    this.isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n    this.checkAuth();\n  }\n  checkAuth() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        data: {\n          session\n        }\n      } = yield _this.supabase.auth.getSession();\n      _this.isAuthenticatedSubject.next(!!session);\n    })();\n  }\n  register(data) {\n    return from(this.supabase.auth.signUp({\n      email: data.email,\n      password: data.password,\n      options: {\n        data: {\n          username: data.username,\n          full_name: data.full_name\n        }\n      }\n    })).pipe(tap(({\n      data,\n      error\n    }) => {\n      if (error) throw error;\n      if (data.session) {\n        this.isAuthenticatedSubject.next(true);\n      }\n    }));\n  }\n  login(credentials) {\n    return from(this.supabase.auth.signInWithPassword(credentials)).pipe(tap(({\n      data,\n      error\n    }) => {\n      if (error) throw error;\n      this.isAuthenticatedSubject.next(true);\n    }));\n  }\n  loginWithGoogle() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        error\n      } = yield _this2.supabase.auth.signInWithOAuth({\n        provider: 'google'\n      });\n      if (error) throw error;\n    })();\n  }\n  loginWithGithub() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        error\n      } = yield _this3.supabase.auth.signInWithOAuth({\n        provider: 'github'\n      });\n      if (error) throw error;\n    })();\n  }\n  logout() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        error\n      } = yield _this4.supabase.auth.signOut();\n      if (error) throw error;\n      _this4.isAuthenticatedSubject.next(false);\n      _this4.router.navigate(['/login']);\n    })();\n  }\n  getProfile() {\n    const user = this.supabase.currentUser;\n    if (!user) throw new Error('No user logged in');\n    return from(this.supabase.from('profiles').select('*').eq('id', user.id).single()).pipe(map(({\n      data,\n      error\n    }) => {\n      if (error) throw error;\n      return data;\n    }));\n  }\n  updateProfile(updates) {\n    const user = this.supabase.currentUser;\n    if (!user) throw new Error('No user logged in');\n    return from(this.supabase.from('profiles').update(updates).eq('id', user.id).select().single()).pipe(map(({\n      data,\n      error\n    }) => {\n      if (error) throw error;\n      return data;\n    }));\n  }\n  uploadAvatar(file) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const user = _this5.supabase.currentUser;\n      if (!user) throw new Error('No user logged in');\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${user.id}/${Date.now()}.${fileExt}`;\n      const {\n        error: uploadError\n      } = yield _this5.supabase.storage.from('avatars').upload(fileName, file);\n      if (uploadError) throw uploadError;\n      const {\n        data: {\n          publicUrl\n        }\n      } = _this5.supabase.storage.from('avatars').getPublicUrl(fileName);\n      return publicUrl;\n    })();\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.SupabaseService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","from","map","tap","AuthService","constructor","supabase","router","isAuthenticatedSubject","isAuthenticated$","asObservable","checkAuth","_this","_asyncToGenerator","data","session","auth","getSession","next","register","signUp","email","password","options","username","full_name","pipe","error","login","credentials","signInWithPassword","loginWithGoogle","_this2","signInWithOAuth","provider","loginWithGithub","_this3","logout","_this4","signOut","navigate","getProfile","user","currentUser","Error","select","eq","id","single","updateProfile","updates","update","uploadAvatar","file","_this5","fileExt","name","split","pop","fileName","Date","now","uploadError","storage","upload","publicUrl","getPublicUrl","i0","ɵɵinject","i1","SupabaseService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\kevin\\Desktop\\SantiagoDev\\proyectospersonales\\crypto-search\\crypto-backend\\src\\app\\core\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SupabaseService } from './supabase.service';\nimport { BehaviorSubject, from, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterData extends LoginCredentials {\n  username: string;\n  full_name?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private isAuthenticatedSubject = new BehaviorSubject<boolean>(false);\n  public isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n\n  constructor(\n    private supabase: SupabaseService,\n    private router: Router\n  ) {\n    this.checkAuth();\n  }\n\n  private async checkAuth() {\n    const { data: { session } } = await this.supabase.auth.getSession();\n    this.isAuthenticatedSubject.next(!!session);\n  }\n\n  register(data: RegisterData): Observable<any> {\n    return from(\n      this.supabase.auth.signUp({\n        email: data.email,\n        password: data.password,\n        options: {\n          data: {\n            username: data.username,\n            full_name: data.full_name\n          }\n        }\n      })\n    ).pipe(\n      tap(({ data, error }) => {\n        if (error) throw error;\n        if (data.session) {\n          this.isAuthenticatedSubject.next(true);\n        }\n      })\n    );\n  }\n\n  login(credentials: LoginCredentials): Observable<any> {\n    return from(\n      this.supabase.auth.signInWithPassword(credentials)\n    ).pipe(\n      tap(({ data, error }) => {\n        if (error) throw error;\n        this.isAuthenticatedSubject.next(true);\n      })\n    );\n  }\n\n  async loginWithGoogle() {\n    const { error } = await this.supabase.auth.signInWithOAuth({\n      provider: 'google'\n    });\n    if (error) throw error;\n  }\n\n  async loginWithGithub() {\n    const { error } = await this.supabase.auth.signInWithOAuth({\n      provider: 'github'\n    });\n    if (error) throw error;\n  }\n\n  async logout() {\n    const { error } = await this.supabase.auth.signOut();\n    if (error) throw error;\n    this.isAuthenticatedSubject.next(false);\n    this.router.navigate(['/login']);\n  }\n\n  getProfile(): Observable<any> {\n    const user = this.supabase.currentUser;\n    if (!user) throw new Error('No user logged in');\n\n    return from(\n      this.supabase.from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single()\n    ).pipe(\n      map(({ data, error }) => {\n        if (error) throw error;\n        return data;\n      })\n    );\n  }\n\n  updateProfile(updates: any): Observable<any> {\n    const user = this.supabase.currentUser;\n    if (!user) throw new Error('No user logged in');\n\n    return from(\n      this.supabase.from('profiles')\n        .update(updates)\n        .eq('id', user.id)\n        .select()\n        .single()\n    ).pipe(\n      map(({ data, error }) => {\n        if (error) throw error;\n        return data;\n      })\n    );\n  }\n\n  async uploadAvatar(file: File): Promise<string> {\n    const user = this.supabase.currentUser;\n    if (!user) throw new Error('No user logged in');\n\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${user.id}/${Date.now()}.${fileExt}`;\n\n    const { error: uploadError } = await this.supabase.storage\n      .from('avatars')\n      .upload(fileName, file);\n\n    if (uploadError) throw uploadError;\n\n    const { data: { publicUrl } } = this.supabase.storage\n      .from('avatars')\n      .getPublicUrl(fileName);\n\n    return publicUrl;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}