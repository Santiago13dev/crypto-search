{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { isStorageError } from '../lib/errors';\nimport StreamDownloadBuilder from './StreamDownloadBuilder';\nexport default class BlobDownloadBuilder {\n  constructor(downloadFn, shouldThrowOnError) {\n    this.downloadFn = downloadFn;\n    this.shouldThrowOnError = shouldThrowOnError;\n  }\n  asStream() {\n    return new StreamDownloadBuilder(this.downloadFn, this.shouldThrowOnError);\n  }\n  then(onfulfilled, onrejected) {\n    return this.execute().then(onfulfilled, onrejected);\n  }\n  execute() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const result = yield this.downloadFn();\n        return {\n          data: yield result.blob(),\n          error: null\n        };\n      } catch (error) {\n        if (this.shouldThrowOnError) {\n          throw error;\n        }\n        if (isStorageError(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    });\n  }\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","isStorageError","StreamDownloadBuilder","BlobDownloadBuilder","constructor","downloadFn","shouldThrowOnError","asStream","onfulfilled","onrejected","execute","data","blob","error"],"sources":["C:/Users/kevin/Desktop/SantiagoDev/proyectospersonales/crypto-search/crypto-backend/node_modules/@supabase/storage-js/dist/module/packages/BlobDownloadBuilder.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isStorageError } from '../lib/errors';\nimport StreamDownloadBuilder from './StreamDownloadBuilder';\nexport default class BlobDownloadBuilder {\n    constructor(downloadFn, shouldThrowOnError) {\n        this.downloadFn = downloadFn;\n        this.shouldThrowOnError = shouldThrowOnError;\n    }\n    asStream() {\n        return new StreamDownloadBuilder(this.downloadFn, this.shouldThrowOnError);\n    }\n    then(onfulfilled, onrejected) {\n        return this.execute().then(onfulfilled, onrejected);\n    }\n    execute() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const result = yield this.downloadFn();\n                return {\n                    data: yield result.blob(),\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (this.shouldThrowOnError) {\n                    throw error;\n                }\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,SAASC,KAAKA,CAACC,KAAK,EAAE;IAAE,OAAOA,KAAK,YAAYH,CAAC,GAAGG,KAAK,GAAG,IAAIH,CAAC,CAAC,UAAUI,OAAO,EAAE;MAAEA,OAAO,CAACD,KAAK,CAAC;IAAE,CAAC,CAAC;EAAE;EAC3G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAO,CAAC,EAAE,UAAUD,OAAO,EAAEE,MAAM,EAAE;IACvD,SAASC,SAASA,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACN,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQA,CAACR,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAO,CAAC,CAACE,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAIA,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACT,KAAK,CAAC,GAAGD,KAAK,CAACU,MAAM,CAACT,KAAK,CAAC,CAACW,IAAI,CAACP,SAAS,EAAEI,QAAQ,CAAC;IAAE;IAC7GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAK,CAACjB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAEU,IAAI,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACD,SAASO,cAAc,QAAQ,eAAe;AAC9C,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,eAAe,MAAMC,mBAAmB,CAAC;EACrCC,WAAWA,CAACC,UAAU,EAAEC,kBAAkB,EAAE;IACxC,IAAI,CAACD,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;EAChD;EACAC,QAAQA,CAAA,EAAG;IACP,OAAO,IAAIL,qBAAqB,CAAC,IAAI,CAACG,UAAU,EAAE,IAAI,CAACC,kBAAkB,CAAC;EAC9E;EACAP,IAAIA,CAACS,WAAW,EAAEC,UAAU,EAAE;IAC1B,OAAO,IAAI,CAACC,OAAO,CAAC,CAAC,CAACX,IAAI,CAACS,WAAW,EAAEC,UAAU,CAAC;EACvD;EACAC,OAAOA,CAAA,EAAG;IACN,OAAO5B,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI;QACA,MAAMe,MAAM,GAAG,MAAM,IAAI,CAACQ,UAAU,CAAC,CAAC;QACtC,OAAO;UACHM,IAAI,EAAE,MAAMd,MAAM,CAACe,IAAI,CAAC,CAAC;UACzBC,KAAK,EAAE;QACX,CAAC;MACL,CAAC,CACD,OAAOA,KAAK,EAAE;QACV,IAAI,IAAI,CAACP,kBAAkB,EAAE;UACzB,MAAMO,KAAK;QACf;QACA,IAAIZ,cAAc,CAACY,KAAK,CAAC,EAAE;UACvB,OAAO;YAAEF,IAAI,EAAE,IAAI;YAAEE;UAAM,CAAC;QAChC;QACA,MAAMA,KAAK;MACf;IACJ,CAAC,CAAC;EACN;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}