{"ast":null,"code":"// types and functions copied over from viem so this library doesn't depend on it\nexport function getAddress(address) {\n  if (!/^0x[a-fA-F0-9]{40}$/.test(address)) {\n    throw new Error(`@supabase/auth-js: Address \"${address}\" is invalid.`);\n  }\n  return address.toLowerCase();\n}\nexport function fromHex(hex) {\n  return parseInt(hex, 16);\n}\nexport function toHex(value) {\n  const bytes = new TextEncoder().encode(value);\n  const hex = Array.from(bytes, byte => byte.toString(16).padStart(2, '0')).join('');\n  return '0x' + hex;\n}\n/**\n * Creates EIP-4361 formatted message.\n */\nexport function createSiweMessage(parameters) {\n  var _a;\n  const {\n    chainId,\n    domain,\n    expirationTime,\n    issuedAt = new Date(),\n    nonce,\n    notBefore,\n    requestId,\n    resources,\n    scheme,\n    uri,\n    version\n  } = parameters;\n  // Validate fields\n  {\n    if (!Number.isInteger(chainId)) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"chainId\". Chain ID must be a EIP-155 chain ID. Provided value: ${chainId}`);\n    if (!domain) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"domain\". Domain must be provided.`);\n    if (nonce && nonce.length < 8) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"nonce\". Nonce must be at least 8 characters. Provided value: ${nonce}`);\n    if (!uri) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"uri\". URI must be provided.`);\n    if (version !== '1') throw new Error(`@supabase/auth-js: Invalid SIWE message field \"version\". Version must be '1'. Provided value: ${version}`);\n    if ((_a = parameters.statement) === null || _a === void 0 ? void 0 : _a.includes('\\n')) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"statement\". Statement must not include '\\\\n'. Provided value: ${parameters.statement}`);\n  }\n  // Construct message\n  const address = getAddress(parameters.address);\n  const origin = scheme ? `${scheme}://${domain}` : domain;\n  const statement = parameters.statement ? `${parameters.statement}\\n` : '';\n  const prefix = `${origin} wants you to sign in with your Ethereum account:\\n${address}\\n\\n${statement}`;\n  let suffix = `URI: ${uri}\\nVersion: ${version}\\nChain ID: ${chainId}${nonce ? `\\nNonce: ${nonce}` : ''}\\nIssued At: ${issuedAt.toISOString()}`;\n  if (expirationTime) suffix += `\\nExpiration Time: ${expirationTime.toISOString()}`;\n  if (notBefore) suffix += `\\nNot Before: ${notBefore.toISOString()}`;\n  if (requestId) suffix += `\\nRequest ID: ${requestId}`;\n  if (resources) {\n    let content = '\\nResources:';\n    for (const resource of resources) {\n      if (!resource || typeof resource !== 'string') throw new Error(`@supabase/auth-js: Invalid SIWE message field \"resources\". Every resource must be a valid string. Provided value: ${resource}`);\n      content += `\\n- ${resource}`;\n    }\n    suffix += content;\n  }\n  return `${prefix}\\n${suffix}`;\n}","map":{"version":3,"names":["getAddress","address","test","Error","toLowerCase","fromHex","hex","parseInt","toHex","value","bytes","TextEncoder","encode","Array","from","byte","toString","padStart","join","createSiweMessage","parameters","_a","chainId","domain","expirationTime","issuedAt","Date","nonce","notBefore","requestId","resources","scheme","uri","version","Number","isInteger","length","statement","includes","origin","prefix","suffix","toISOString","content","resource"],"sources":["C:/Users/kevin/Desktop/SantiagoDev/proyectospersonales/crypto-search/crypto-backend/node_modules/@supabase/auth-js/dist/module/lib/web3/ethereum.js"],"sourcesContent":["// types and functions copied over from viem so this library doesn't depend on it\nexport function getAddress(address) {\n    if (!/^0x[a-fA-F0-9]{40}$/.test(address)) {\n        throw new Error(`@supabase/auth-js: Address \"${address}\" is invalid.`);\n    }\n    return address.toLowerCase();\n}\nexport function fromHex(hex) {\n    return parseInt(hex, 16);\n}\nexport function toHex(value) {\n    const bytes = new TextEncoder().encode(value);\n    const hex = Array.from(bytes, (byte) => byte.toString(16).padStart(2, '0')).join('');\n    return ('0x' + hex);\n}\n/**\n * Creates EIP-4361 formatted message.\n */\nexport function createSiweMessage(parameters) {\n    var _a;\n    const { chainId, domain, expirationTime, issuedAt = new Date(), nonce, notBefore, requestId, resources, scheme, uri, version, } = parameters;\n    // Validate fields\n    {\n        if (!Number.isInteger(chainId))\n            throw new Error(`@supabase/auth-js: Invalid SIWE message field \"chainId\". Chain ID must be a EIP-155 chain ID. Provided value: ${chainId}`);\n        if (!domain)\n            throw new Error(`@supabase/auth-js: Invalid SIWE message field \"domain\". Domain must be provided.`);\n        if (nonce && nonce.length < 8)\n            throw new Error(`@supabase/auth-js: Invalid SIWE message field \"nonce\". Nonce must be at least 8 characters. Provided value: ${nonce}`);\n        if (!uri)\n            throw new Error(`@supabase/auth-js: Invalid SIWE message field \"uri\". URI must be provided.`);\n        if (version !== '1')\n            throw new Error(`@supabase/auth-js: Invalid SIWE message field \"version\". Version must be '1'. Provided value: ${version}`);\n        if ((_a = parameters.statement) === null || _a === void 0 ? void 0 : _a.includes('\\n'))\n            throw new Error(`@supabase/auth-js: Invalid SIWE message field \"statement\". Statement must not include '\\\\n'. Provided value: ${parameters.statement}`);\n    }\n    // Construct message\n    const address = getAddress(parameters.address);\n    const origin = scheme ? `${scheme}://${domain}` : domain;\n    const statement = parameters.statement ? `${parameters.statement}\\n` : '';\n    const prefix = `${origin} wants you to sign in with your Ethereum account:\\n${address}\\n\\n${statement}`;\n    let suffix = `URI: ${uri}\\nVersion: ${version}\\nChain ID: ${chainId}${nonce ? `\\nNonce: ${nonce}` : ''}\\nIssued At: ${issuedAt.toISOString()}`;\n    if (expirationTime)\n        suffix += `\\nExpiration Time: ${expirationTime.toISOString()}`;\n    if (notBefore)\n        suffix += `\\nNot Before: ${notBefore.toISOString()}`;\n    if (requestId)\n        suffix += `\\nRequest ID: ${requestId}`;\n    if (resources) {\n        let content = '\\nResources:';\n        for (const resource of resources) {\n            if (!resource || typeof resource !== 'string')\n                throw new Error(`@supabase/auth-js: Invalid SIWE message field \"resources\". Every resource must be a valid string. Provided value: ${resource}`);\n            content += `\\n- ${resource}`;\n        }\n        suffix += content;\n    }\n    return `${prefix}\\n${suffix}`;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}